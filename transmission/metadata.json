{
  "name": "transmission",
  "description": "Installs/Configures transmission",
  "long_description": "Description\n===========\n\nInstalls the [Transmission BitTorrent Client](http://transmissionbt.org) and includes a `transmission_torrent_file` LWRP.\n\nRequirements\n============\n\nPlatform\n--------\n\nKnown to work on Debian, Ubuntu, Red Hat and CentOS\n\nCookbooks\n---------\n\n* build-essential - for compiling the source.\n* openssl - for generating a secure password.\n\nAttributes\n==========\n\n* `node[\"transmission\"][\"rpc_bind_address\"]` - Where to listen for RPC connections, default `0.0.0.0`.\n* `node[\"transmission\"][\"rpc_port\"]` - The port Transmission listens on for remote services, default `9091`.\n* `node[\"transmission\"][\"rpc_username\"]` - The username required to access remote services, default `transmission`.\n* `node[\"transmission\"][\"rpc_password\"]` - The ssha1 encrypted password, default generated by `secure_password`.\n* `node[\"transmission\"][\"home\"]` - Transmission's home directory, default `/var/lib/transmission-daemon`.\n* `node[\"transmission\"][\"config_dir\"]` - Transmission's config directory, default `/var/lib/transmission-daemon/info`.\n* `node[\"transmission\"][\"download_dir\"]` - Directory to move complete files to, default `/var/lib/transmission-daemon/downloads`.\n* `node[\"transmission\"][\"incomplete_dir\"]` - Directory to keep incomplete files in, default `/var/lib/transmission-daemon/incomplete`.\n\nThe file also contains the following attribute types:\n\n* platform specific locations and settings.\n* source installation settings\n\nResource/Provider\n=================\n\n`transmission_torrent_file`\n---------------------------\n\nDownload a file via the [BitTorrent protocol](http://en.wikipedia.org/wiki/BitTorrent).  The usage semantics are like that of the existing [file](http://wiki.opscode.com/display/chef/Resources#Resources-File) and [remote_file](http://wiki.opscode.com/display/chef/Resources#Resources-RemoteFile) resources.  This allows very fast downloads for files that are part of large BitTorrent swarms.  The Ubuntu 10.04 LTS ISO (around 700MB) downloads in about 50 seconds.\n\n# Actions\n\n- :create: Download a file via the BitTorrent protocol\n\n# Attribute Parameters\n\n- path: name attribute. the path to the file\n- torrent: torrent file of the swarm to join.  can either be a url or local file path\n- blocking: should the file be downloaded in a blocking way?  If `true` Chef will download the file in a single Chef run, if `false` Chef will check for a completed download during each Chef run until the download is complete. default is `true`.\n- continue_seeding: should the file continue to be seeded to the swarm after download? default is `false`.\n- owner: The owner for the file\n- group: The group owner of the file (string or id)\n- rpc_host: the address of the Transmission RPC host to connect to. default is `localhost`.\n- rpc_port: the port of the Transmission RPC host to connect to. default is `9091`.\n- rpc_username: the username of the Transmission RPC account. default is `transmission`.\n- rpc_password: the password of the Transmission RPC account . should probably be `node['transmission']['rpc_password']` which by default is a secure password generated for this node.\n\n# Example\n\n    # download the lucid iso\n    transmission_torrent_file \"/home/ubuntu/ubuntu.iso\"  do\n      torrent \"http://releases.ubuntu.com/lucid/ubuntu-10.04.1-server-i386.iso.torrent\"\n      owner 'ubuntu'\n      group 'ubuntu'\n      rpc_username node['transmission']['rpc_username']\n      rpc_password node['transmission']['rpc_password']\n      action :create\n    end\n    \n    # do the same thing but continue seeding after download\n    transmission_torrent_file \"/home/ubuntu/ubuntu.iso\"  do\n      torrent \"http://releases.ubuntu.com/lucid/ubuntu-10.04.1-server-i386.iso.torrent\"\n      owner 'ubuntu'\n      group 'ubuntu'\n      continue_seeding true\n      rpc_username node['transmission']['rpc_username']\n      rpc_password node['transmission']['rpc_password']\n      action :create\n    end\n\nUsage\n=====\n\ndefault\n-------\n\nInclude default recipe in a run list, to get some Transmission installed. Installs Transmission by package or source depending on the platform.\n\npackage\n-------\n\nInstalls Transmission from packages.  This should only be loaded by the default recipe.\n\nsource\n------\n\nInstalls Transmission from source.  This should only be loaded by the default recipe.\n\nLicense and Author\n==================\n\nAuthor: Seth Chisamore (<schisamo@opscode.com>)\n\nCopyright 2011, Opscode, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "maintainer": "Opscode, Inc.",
  "maintainer_email": "cookbooks@opscode.com",
  "license": "Apache 2.0",
  "platforms": {
  },
  "dependencies": {
    "openssl": [

    ],
    "build-essential": [

    ]
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  },
  "version": "1.0.0"
}