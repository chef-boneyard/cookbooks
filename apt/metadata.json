{
  "name": "apt",
  "description": "Configures apt and apt services and an LWRP for managing apt repositories",
  "long_description": "Description\n===========\n\nConfigures various APT components on Debian-like systems.  Also includes a LWRP.\n\nRecipes\n=======\n\ndefault\n-------\n\nThe default recipe runs apt-get update during the Compile Phase of the Chef run to ensure that the system's package cache is updated with the latest. It is recommended that this recipe appear first in a node's run list (directly or through a role) to ensure that when installing packages, Chef will be able to download the latest version available on the remote APT repository.\n\nThis recipe also sets up a local cache directory for preseeding packages.\n\ncacher\n------\n\nInstalls the apt-cacher package and service so the system can be an APT cache.\n\nproxy\n-----\n\nInstalls the apt-proxy package and service so the system can be an APT proxy.\n\nResources/Providers\n===================\n\nThis cookbook contains an LWRP, `apt_repository`, which provides the `add` and `remove` actions for managing additional software repositories with entries in the `/etc/apt/sources.list.d/` directory. The LWRP also supports passing in a `key` and `keyserver` as attributes.\n\n* `add` takes a number of attributes and creates a repository file and builds the repository listing.\n* `remove` deletes the `/etc/apt/sources.list.d/#{new_resource.repo_name}-sources.list` file identified by the `repo_name` passed as the resource name.\n\nUsage\n=====\n\nPut `recipe[apt]` first in the run list. If you have other recipes that you want to use to configure how apt behaves, like new sources, notify the execute resource to run, e.g.:\n\n    template \"/etc/apt/sources.list.d/my_apt_sources.list\" do\n      notifies :run, resources(:execute => \"apt-get update\"), :immediately\n    end\n\nThe above will run during execution phase since it is a normal template resource, and should appear before other package resources that need the sources in the template.\n\nAn example of The LWRP `apt_repository` `add` action:\n\n    apt_repository \"zenoss\" do\n      uri \"http://dev.zenoss.org/deb\"\n      distribution \"main\"\n      components [\"stable\"]\n      action :add\n    end\n\nAn example of `apt_repository` using a signing key:\n\n    apt_repository \"hardy-rsyslog-ppa\" do\n      uri \"http://ppa.launchpad.net/a.bono/rsyslog/ubuntu\"\n      distribution \"hardy\"\n      components [\"main\"]\n      keyserver \"keyserver.ubuntu.com\"\n      key \"C0061A4A\"\n      action :add\n      notifies :run, \"execute[apt-get update]\", :immediately\n    end\n\nand the `remove` action:\n\n    apt_repository \"zenoss\" do\n      action :remove\n    end\n\nLicense and Author\n==================\n\nAuthor:: Joshua Timberman (<joshua@opscode.com>)\nAuthor:: Matt Ray (<matt@opscode.com>)\n\nCopyright 2009-2011 Opscode, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n",
  "maintainer": "Opscode, Inc.",
  "maintainer_email": "cookbooks@opscode.com",
  "license": "Apache 2.0",
  "platforms": {
    "ubuntu": [

    ],
    "debian": [

    ]
  },
  "dependencies": {
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
    "apt": "Runs apt-get update during compile phase and sets up preseed directories",
    "apt::cacher": "Set up an APT cache",
    "apt::proxy": "Set up an APT proxy"
  },
  "version": "1.0.0"
}