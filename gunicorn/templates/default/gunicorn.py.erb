##
# Gunicorn config at <%= @name %>
# Managed by Chef - Local Changes will be Nuked from Orbit (just to be sure)
##

# What ports/sockets to listen on, and what options for them.
bind = "<%= @listen %>"

# The maximum number of pending connections
backlog = <%= @backlog %>

# What the timeout for killing busy workers is, in seconds
timeout = <%= @worker_timeout %>

# How long to wait for requests on a Keep-Alive connection, in seconds
keepalive = <%= @worker_keepalive %>

# The maxium number of requests a worker will process before restarting
max_requests = <%= @worker_max_requests %>

# Whether the app should be pre-loaded
preload_app = <%= @preload_app.to_s.capitalize %>

# How many worker processes
workers = <%= @worker_processes %>

# Type of worker to use
worker_class = "<%= @worker_class %>"

<%- if @server_hooks[:when_ready] %>
# What to do after the server starts
def def_start_server(server):
    <%= @server_hooks[:when_ready] %>

<%- end %>
<%- if @server_hooks[:pre_fork] %>
# What to do before we fork a worker
def def_pre_fork(server, worker):
    <%= @server_hooks[:pre_fork] %>

<%- end %>
<%- if @server_hooks[:post_fork] %>
# What to do after we fork a worker
def def_post_fork(server, worker):
    <%= @server_hooks[:post_fork] %>

<%- end %>
<%- if @server_hooks[:pre_exec] %>
# What to do before a new master process is forked
def def_pre_exec(server):
    <%= @server_hooks[:pre_exec] %>

<%- end %>
<%- if @server_hooks[:pre_request] %>
# What to do before we process a request
def def_pre_request(worker, req):
    <%= @server_hooks[:pre_request] %>

<%- end %>
<%- if @server_hooks[:post_request] %>
# What to do after we process a request
def def_post_request(worker, req):
    <%= @server_hooks[:post_request] %>

<%- end %>
<%- if @server_hooks[:worker_exit] %>
# What to do after we process a request
def def_worker_exit(server, worker):
    <%= @server_hooks[:worker_exit] %>

<%- end %>
<%- if @pid %>
# Where to drop a pidfile
pidfile = "<%= @pid %>"

<%- end %>